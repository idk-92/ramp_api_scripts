import {
  pgTable,
  foreignKey,
  unique,
  pgEnum,
  uuid,
  timestamp,
  text,
  bigint,
  serial,
  varchar,
  date,
  numeric,
  integer,
  doublePrecision,
  boolean,
  index,
  real,
  jsonb,
  time,
  pgSchema,
  primaryKey,
} from "drizzle-orm/pg-core";
import { sql } from "drizzle-orm";

export const bills = pgTable("bills", {
  id: uuid("id").primaryKey().notNull(),
  amount: numeric("amount"),
  currencyCode: text("currency_code"),
  createdAt: timestamp("created_at", { mode: "string" }),
  deepLinkUrl: text("deep_link_url"),
  dueAt: timestamp("due_at", { withTimezone: true, mode: "string" }),
  entityId: text("entity_id"),
  invoiceNumber: text("invoice_number"),
  issuedAt: timestamp("issued_at", { withTimezone: true, mode: "string" }),
  remoteId: text("remote_id"),
  status: text("status"),
  paymentEffectiveDate: timestamp("payment_effective_date", {
    withTimezone: true,
    mode: "string",
  }),
  paymentDate: timestamp("payment_date", {
    withTimezone: true,
    mode: "string",
  }),
  paymentMethod: text("payment_method"),
  paymentAmount: numeric("payment_amount"),
  vendorName: text("vendor_name"),
  vendorType: text("vendor_type"),
  accountingLabels: text("accounting_labels").array(),
});
